//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Dieser Quellcode wurde automatisch generiert von wsdl, Version=4.7.2046.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "keyingress_soap", Namespace = "http://localhost")]
public partial class webservice_keyingress : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private AuthenticationHeader authenticationHeaderValueField;

    private System.Threading.SendOrPostCallback AuthenticationHeaderOperationCompleted;

    private System.Threading.SendOrPostCallback add_group_to_surveyOperationCompleted;

    private System.Threading.SendOrPostCallback add_interviewer_to_surveyOperationCompleted;

    private System.Threading.SendOrPostCallback add_interviewer_to_tenantOperationCompleted;

    private System.Threading.SendOrPostCallback add_participantOperationCompleted;

    private System.Threading.SendOrPostCallback add_participant_to_actionOperationCompleted;

    private System.Threading.SendOrPostCallback add_participant_to_groupOperationCompleted;

    private System.Threading.SendOrPostCallback add_surveyOperationCompleted;

    private System.Threading.SendOrPostCallback check_interviewer_login_statusOperationCompleted;

    private System.Threading.SendOrPostCallback check_paneluser_loginOperationCompleted;

    private System.Threading.SendOrPostCallback check_surveyOperationCompleted;

    private System.Threading.SendOrPostCallback create_survey_email_invitationOperationCompleted;

    private System.Threading.SendOrPostCallback create_survey_email_reminderOperationCompleted;

    private System.Threading.SendOrPostCallback delete_interviewer_from_tenantOperationCompleted;

    private System.Threading.SendOrPostCallback delete_participantsOperationCompleted;

    private System.Threading.SendOrPostCallback export_panel_ordersOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_idOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_nameOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_key_figuresOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_login_statusOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_reportOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_survey_termination_category_call_timeOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_survey_termination_category_countOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_workingtimeOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_workingtime_in_all_surveysOperationCompleted;

    private System.Threading.SendOrPostCallback get_interviewer_workingtime_in_surveyOperationCompleted;

    private System.Threading.SendOrPostCallback get_mail_exportOperationCompleted;

    private System.Threading.SendOrPostCallback get_participant_exportOperationCompleted;

    private System.Threading.SendOrPostCallback get_participant_export_infoOperationCompleted;

    private System.Threading.SendOrPostCallback get_participant_from_tokenOperationCompleted;

    private System.Threading.SendOrPostCallback get_projectsOperationCompleted;

    private System.Threading.SendOrPostCallback get_project_actionsOperationCompleted;

    private System.Threading.SendOrPostCallback get_project_groupsOperationCompleted;

    private System.Threading.SendOrPostCallback get_project_surveysOperationCompleted;

    private System.Threading.SendOrPostCallback get_project_all_surveysOperationCompleted;

    private System.Threading.SendOrPostCallback get_questionnaire_exportOperationCompleted;

    private System.Threading.SendOrPostCallback get_questionnaire_export_infoOperationCompleted;

    private System.Threading.SendOrPostCallback get_questionnaire_export_serializedOperationCompleted;

    private System.Threading.SendOrPostCallback get_questionnaire_namesOperationCompleted;

    private System.Threading.SendOrPostCallback get_participants_from_tansOperationCompleted;

    private System.Threading.SendOrPostCallback get_participant_surveysOperationCompleted;

    private System.Threading.SendOrPostCallback get_participant_table_suffixesOperationCompleted;

    private System.Threading.SendOrPostCallback get_questionnaire_syntax_triple_sOperationCompleted;

    private System.Threading.SendOrPostCallback get_sound_files_of_current_questionOperationCompleted;

    private System.Threading.SendOrPostCallback get_survey_participant_infoOperationCompleted;

    private System.Threading.SendOrPostCallback get_survey_total_call_timeOperationCompleted;

    private System.Threading.SendOrPostCallback get_survey_workingtimeOperationCompleted;

    private System.Threading.SendOrPostCallback get_survey_workingtime_of_interviewersOperationCompleted;

    private System.Threading.SendOrPostCallback get_system_idOperationCompleted;

    private System.Threading.SendOrPostCallback get_url_for_interview_sessionOperationCompleted;

    private System.Threading.SendOrPostCallback reset_survey_participantOperationCompleted;

    private System.Threading.SendOrPostCallback set_interviewer_breakOperationCompleted;

    private System.Threading.SendOrPostCallback set_mail_send_statusOperationCompleted;

    /// <remarks/>
    public webservice_keyingress()
    {
        this.Url = "https://www.ipsos-eor.com/webservice/soap_server_standard.php";
    }

    public AuthenticationHeader AuthenticationHeaderValue
    {
        get
        {
            return this.authenticationHeaderValueField;
        }
        set
        {
            this.authenticationHeaderValueField = value;
        }
    }

    /// <remarks/>
    public event AuthenticationHeaderCompletedEventHandler AuthenticationHeaderCompleted;

    /// <remarks/>
    public event add_group_to_surveyCompletedEventHandler add_group_to_surveyCompleted;

    /// <remarks/>
    public event add_interviewer_to_surveyCompletedEventHandler add_interviewer_to_surveyCompleted;

    /// <remarks/>
    public event add_interviewer_to_tenantCompletedEventHandler add_interviewer_to_tenantCompleted;

    /// <remarks/>
    public event add_participantCompletedEventHandler add_participantCompleted;

    /// <remarks/>
    public event add_participant_to_actionCompletedEventHandler add_participant_to_actionCompleted;

    /// <remarks/>
    public event add_participant_to_groupCompletedEventHandler add_participant_to_groupCompleted;

    /// <remarks/>
    public event add_surveyCompletedEventHandler add_surveyCompleted;

    /// <remarks/>
    public event check_interviewer_login_statusCompletedEventHandler check_interviewer_login_statusCompleted;

    /// <remarks/>
    public event check_paneluser_loginCompletedEventHandler check_paneluser_loginCompleted;

    /// <remarks/>
    public event check_surveyCompletedEventHandler check_surveyCompleted;

    /// <remarks/>
    public event create_survey_email_invitationCompletedEventHandler create_survey_email_invitationCompleted;

    /// <remarks/>
    public event create_survey_email_reminderCompletedEventHandler create_survey_email_reminderCompleted;

    /// <remarks/>
    public event delete_interviewer_from_tenantCompletedEventHandler delete_interviewer_from_tenantCompleted;

    /// <remarks/>
    public event delete_participantsCompletedEventHandler delete_participantsCompleted;

    /// <remarks/>
    public event export_panel_ordersCompletedEventHandler export_panel_ordersCompleted;

    /// <remarks/>
    public event get_interviewer_idCompletedEventHandler get_interviewer_idCompleted;

    /// <remarks/>
    public event get_interviewer_nameCompletedEventHandler get_interviewer_nameCompleted;

    /// <remarks/>
    public event get_interviewer_key_figuresCompletedEventHandler get_interviewer_key_figuresCompleted;

    /// <remarks/>
    public event get_interviewer_login_statusCompletedEventHandler get_interviewer_login_statusCompleted;

    /// <remarks/>
    public event get_interviewer_reportCompletedEventHandler get_interviewer_reportCompleted;

    /// <remarks/>
    public event get_interviewer_survey_termination_category_call_timeCompletedEventHandler get_interviewer_survey_termination_category_call_timeCompleted;

    /// <remarks/>
    public event get_interviewer_survey_termination_category_countCompletedEventHandler get_interviewer_survey_termination_category_countCompleted;

    /// <remarks/>
    public event get_interviewer_workingtimeCompletedEventHandler get_interviewer_workingtimeCompleted;

    /// <remarks/>
    public event get_interviewer_workingtime_in_all_surveysCompletedEventHandler get_interviewer_workingtime_in_all_surveysCompleted;

    /// <remarks/>
    public event get_interviewer_workingtime_in_surveyCompletedEventHandler get_interviewer_workingtime_in_surveyCompleted;

    /// <remarks/>
    public event get_mail_exportCompletedEventHandler get_mail_exportCompleted;

    /// <remarks/>
    public event get_participant_exportCompletedEventHandler get_participant_exportCompleted;

    /// <remarks/>
    public event get_participant_export_infoCompletedEventHandler get_participant_export_infoCompleted;

    /// <remarks/>
    public event get_participant_from_tokenCompletedEventHandler get_participant_from_tokenCompleted;

    /// <remarks/>
    public event get_projectsCompletedEventHandler get_projectsCompleted;

    /// <remarks/>
    public event get_project_actionsCompletedEventHandler get_project_actionsCompleted;

    /// <remarks/>
    public event get_project_groupsCompletedEventHandler get_project_groupsCompleted;

    /// <remarks/>
    public event get_project_surveysCompletedEventHandler get_project_surveysCompleted;

    /// <remarks/>
    public event get_project_all_surveysCompletedEventHandler get_project_all_surveysCompleted;

    /// <remarks/>
    public event get_questionnaire_exportCompletedEventHandler get_questionnaire_exportCompleted;

    /// <remarks/>
    public event get_questionnaire_export_infoCompletedEventHandler get_questionnaire_export_infoCompleted;

    /// <remarks/>
    public event get_questionnaire_export_serializedCompletedEventHandler get_questionnaire_export_serializedCompleted;

    /// <remarks/>
    public event get_questionnaire_namesCompletedEventHandler get_questionnaire_namesCompleted;

    /// <remarks/>
    public event get_participants_from_tansCompletedEventHandler get_participants_from_tansCompleted;

    /// <remarks/>
    public event get_participant_surveysCompletedEventHandler get_participant_surveysCompleted;

    /// <remarks/>
    public event get_participant_table_suffixesCompletedEventHandler get_participant_table_suffixesCompleted;

    /// <remarks/>
    public event get_questionnaire_syntax_triple_sCompletedEventHandler get_questionnaire_syntax_triple_sCompleted;

    /// <remarks/>
    public event get_sound_files_of_current_questionCompletedEventHandler get_sound_files_of_current_questionCompleted;

    /// <remarks/>
    public event get_survey_participant_infoCompletedEventHandler get_survey_participant_infoCompleted;

    /// <remarks/>
    public event get_survey_total_call_timeCompletedEventHandler get_survey_total_call_timeCompleted;

    /// <remarks/>
    public event get_survey_workingtimeCompletedEventHandler get_survey_workingtimeCompleted;

    /// <remarks/>
    public event get_survey_workingtime_of_interviewersCompletedEventHandler get_survey_workingtime_of_interviewersCompleted;

    /// <remarks/>
    public event get_system_idCompletedEventHandler get_system_idCompleted;

    /// <remarks/>
    public event get_url_for_interview_sessionCompletedEventHandler get_url_for_interview_sessionCompleted;

    /// <remarks/>
    public event reset_survey_participantCompletedEventHandler reset_survey_participantCompleted;

    /// <remarks/>
    public event set_interviewer_breakCompletedEventHandler set_interviewer_breakCompleted;

    /// <remarks/>
    public event set_mail_send_statusCompletedEventHandler set_mail_send_statusCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AuthenticationHeader", RequestElementName = "AuthenticationHeaderA", RequestNamespace = "http://localhost", OneWay = true, Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AuthenticationHeader(string username, string password)
    {
        this.Invoke("AuthenticationHeader", new object[] {
                    username,
                    password});
    }

    /// <remarks/>
    public System.IAsyncResult BeginAuthenticationHeader(string username, string password, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("AuthenticationHeader", new object[] {
                    username,
                    password}, callback, asyncState);
    }

    /// <remarks/>
    public void EndAuthenticationHeader(System.IAsyncResult asyncResult)
    {
        this.EndInvoke(asyncResult);
    }

    /// <remarks/>
    public void AuthenticationHeaderAsync(string username, string password)
    {
        this.AuthenticationHeaderAsync(username, password, null);
    }

    /// <remarks/>
    public void AuthenticationHeaderAsync(string username, string password, object userState)
    {
        if ((this.AuthenticationHeaderOperationCompleted == null))
        {
            this.AuthenticationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticationHeaderOperationCompleted);
        }
        this.InvokeAsync("AuthenticationHeader", new object[] {
                    username,
                    password}, this.AuthenticationHeaderOperationCompleted, userState);
    }

    private void OnAuthenticationHeaderOperationCompleted(object arg)
    {
        if ((this.AuthenticationHeaderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AuthenticationHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_group_to_survey", RequestNamespace = "http://localhost", ResponseElementName = "add_group_to_survey_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("success")]
    public bool add_group_to_survey(int project_id, int survey_id, int group_id, out string extra)
    {
        object[] results = this.Invoke("add_group_to_survey", new object[] {
                    project_id,
                    survey_id,
                    group_id});
        extra = ((string)(results[1]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_group_to_survey(int project_id, int survey_id, int group_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_group_to_survey", new object[] {
                    project_id,
                    survey_id,
                    group_id}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_group_to_survey(System.IAsyncResult asyncResult, out string extra)
    {
        object[] results = this.EndInvoke(asyncResult);
        extra = ((string)(results[1]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_group_to_surveyAsync(int project_id, int survey_id, int group_id)
    {
        this.add_group_to_surveyAsync(project_id, survey_id, group_id, null);
    }

    /// <remarks/>
    public void add_group_to_surveyAsync(int project_id, int survey_id, int group_id, object userState)
    {
        if ((this.add_group_to_surveyOperationCompleted == null))
        {
            this.add_group_to_surveyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_group_to_surveyOperationCompleted);
        }
        this.InvokeAsync("add_group_to_survey", new object[] {
                    project_id,
                    survey_id,
                    group_id}, this.add_group_to_surveyOperationCompleted, userState);
    }

    private void Onadd_group_to_surveyOperationCompleted(object arg)
    {
        if ((this.add_group_to_surveyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_group_to_surveyCompleted(this, new add_group_to_surveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_interviewer_to_survey", RequestNamespace = "http://localhost", ResponseElementName = "add_interviewer_to_survey_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("add_interviewer_to_survey_result")]
    public bool add_interviewer_to_survey(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified)
    {
        object[] results = this.Invoke("add_interviewer_to_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_interviewer_to_survey(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_interviewer_to_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_interviewer_to_survey(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_interviewer_to_surveyAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified)
    {
        this.add_interviewer_to_surveyAsync(interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, project_id, project_idSpecified, null);
    }

    /// <remarks/>
    public void add_interviewer_to_surveyAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, object userState)
    {
        if ((this.add_interviewer_to_surveyOperationCompleted == null))
        {
            this.add_interviewer_to_surveyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_interviewer_to_surveyOperationCompleted);
        }
        this.InvokeAsync("add_interviewer_to_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified}, this.add_interviewer_to_surveyOperationCompleted, userState);
    }

    private void Onadd_interviewer_to_surveyOperationCompleted(object arg)
    {
        if ((this.add_interviewer_to_surveyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_interviewer_to_surveyCompleted(this, new add_interviewer_to_surveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_interviewer_to_tenant", RequestNamespace = "http://localhost", ResponseElementName = "add_interviewer_to_tenant_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("add_interviewer_to_tenant_result")]
    public bool add_interviewer_to_tenant(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified)
    {
        object[] results = this.Invoke("add_interviewer_to_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_interviewer_to_tenant(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_interviewer_to_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_interviewer_to_tenant(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_interviewer_to_tenantAsync(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified)
    {
        this.add_interviewer_to_tenantAsync(interviewer_id, interviewer_idSpecified, project_id, project_idSpecified, null);
    }

    /// <remarks/>
    public void add_interviewer_to_tenantAsync(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified, object userState)
    {
        if ((this.add_interviewer_to_tenantOperationCompleted == null))
        {
            this.add_interviewer_to_tenantOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_interviewer_to_tenantOperationCompleted);
        }
        this.InvokeAsync("add_interviewer_to_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified}, this.add_interviewer_to_tenantOperationCompleted, userState);
    }

    private void Onadd_interviewer_to_tenantOperationCompleted(object arg)
    {
        if ((this.add_interviewer_to_tenantCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_interviewer_to_tenantCompleted(this, new add_interviewer_to_tenantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_participant", RequestNamespace = "http://localhost", ResponseElementName = "add_participant_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("success")]
    public bool add_participant(int project_id, string participants_xml, out int import_count, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool import_countSpecified, out string participant_ids, out string extra)
    {
        object[] results = this.Invoke("add_participant", new object[] {
                    project_id,
                    participants_xml});
        import_count = ((int)(results[1]));
        import_countSpecified = ((bool)(results[2]));
        participant_ids = ((string)(results[3]));
        extra = ((string)(results[4]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_participant(int project_id, string participants_xml, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_participant", new object[] {
                    project_id,
                    participants_xml}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_participant(System.IAsyncResult asyncResult, out int import_count, out bool import_countSpecified, out string participant_ids, out string extra)
    {
        object[] results = this.EndInvoke(asyncResult);
        import_count = ((int)(results[1]));
        import_countSpecified = ((bool)(results[2]));
        participant_ids = ((string)(results[3]));
        extra = ((string)(results[4]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_participantAsync(int project_id, string participants_xml)
    {
        this.add_participantAsync(project_id, participants_xml, null);
    }

    /// <remarks/>
    public void add_participantAsync(int project_id, string participants_xml, object userState)
    {
        if ((this.add_participantOperationCompleted == null))
        {
            this.add_participantOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_participantOperationCompleted);
        }
        this.InvokeAsync("add_participant", new object[] {
                    project_id,
                    participants_xml}, this.add_participantOperationCompleted, userState);
    }

    private void Onadd_participantOperationCompleted(object arg)
    {
        if ((this.add_participantCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_participantCompleted(this, new add_participantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_participant_to_action", RequestNamespace = "http://localhost", ResponseElementName = "add_participant_to_action_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("add_participant_to_action_result")]
    public bool add_participant_to_action(int project_id, int action_id, string participants_xml)
    {
        object[] results = this.Invoke("add_participant_to_action", new object[] {
                    project_id,
                    action_id,
                    participants_xml});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_participant_to_action(int project_id, int action_id, string participants_xml, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_participant_to_action", new object[] {
                    project_id,
                    action_id,
                    participants_xml}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_participant_to_action(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_participant_to_actionAsync(int project_id, int action_id, string participants_xml)
    {
        this.add_participant_to_actionAsync(project_id, action_id, participants_xml, null);
    }

    /// <remarks/>
    public void add_participant_to_actionAsync(int project_id, int action_id, string participants_xml, object userState)
    {
        if ((this.add_participant_to_actionOperationCompleted == null))
        {
            this.add_participant_to_actionOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_participant_to_actionOperationCompleted);
        }
        this.InvokeAsync("add_participant_to_action", new object[] {
                    project_id,
                    action_id,
                    participants_xml}, this.add_participant_to_actionOperationCompleted, userState);
    }

    private void Onadd_participant_to_actionOperationCompleted(object arg)
    {
        if ((this.add_participant_to_actionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_participant_to_actionCompleted(this, new add_participant_to_actionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_participant_to_group", RequestNamespace = "http://localhost", ResponseElementName = "add_participant_to_group_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("success")]
    public bool add_participant_to_group(int project_id, string participants_xml, string group, out int import_count, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool import_countSpecified, out string participant_ids, out bool added_to_group, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool added_to_groupSpecified, out bool group_created, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool group_createdSpecified, out int group_id, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool group_idSpecified, out string extra)
    {
        object[] results = this.Invoke("add_participant_to_group", new object[] {
                    project_id,
                    participants_xml,
                    group});
        import_count = ((int)(results[1]));
        import_countSpecified = ((bool)(results[2]));
        participant_ids = ((string)(results[3]));
        added_to_group = ((bool)(results[4]));
        added_to_groupSpecified = ((bool)(results[5]));
        group_created = ((bool)(results[6]));
        group_createdSpecified = ((bool)(results[7]));
        group_id = ((int)(results[8]));
        group_idSpecified = ((bool)(results[9]));
        extra = ((string)(results[10]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_participant_to_group(int project_id, string participants_xml, string group, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_participant_to_group", new object[] {
                    project_id,
                    participants_xml,
                    group}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_participant_to_group(System.IAsyncResult asyncResult, out int import_count, out bool import_countSpecified, out string participant_ids, out bool added_to_group, out bool added_to_groupSpecified, out bool group_created, out bool group_createdSpecified, out int group_id, out bool group_idSpecified, out string extra)
    {
        object[] results = this.EndInvoke(asyncResult);
        import_count = ((int)(results[1]));
        import_countSpecified = ((bool)(results[2]));
        participant_ids = ((string)(results[3]));
        added_to_group = ((bool)(results[4]));
        added_to_groupSpecified = ((bool)(results[5]));
        group_created = ((bool)(results[6]));
        group_createdSpecified = ((bool)(results[7]));
        group_id = ((int)(results[8]));
        group_idSpecified = ((bool)(results[9]));
        extra = ((string)(results[10]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_participant_to_groupAsync(int project_id, string participants_xml, string group)
    {
        this.add_participant_to_groupAsync(project_id, participants_xml, group, null);
    }

    /// <remarks/>
    public void add_participant_to_groupAsync(int project_id, string participants_xml, string group, object userState)
    {
        if ((this.add_participant_to_groupOperationCompleted == null))
        {
            this.add_participant_to_groupOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_participant_to_groupOperationCompleted);
        }
        this.InvokeAsync("add_participant_to_group", new object[] {
                    project_id,
                    participants_xml,
                    group}, this.add_participant_to_groupOperationCompleted, userState);
    }

    private void Onadd_participant_to_groupOperationCompleted(object arg)
    {
        if ((this.add_participant_to_groupCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_participant_to_groupCompleted(this, new add_participant_to_groupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/add_survey", RequestNamespace = "http://localhost", ResponseElementName = "add_survey_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("success")]
    public bool add_survey(int project_id, string survey_name, int base_survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool base_survey_idSpecified, out int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool survey_idSpecified, out string extra)
    {
        object[] results = this.Invoke("add_survey", new object[] {
                    project_id,
                    survey_name,
                    base_survey_id,
                    base_survey_idSpecified});
        survey_id = ((int)(results[1]));
        survey_idSpecified = ((bool)(results[2]));
        extra = ((string)(results[3]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginadd_survey(int project_id, string survey_name, int base_survey_id, bool base_survey_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("add_survey", new object[] {
                    project_id,
                    survey_name,
                    base_survey_id,
                    base_survey_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endadd_survey(System.IAsyncResult asyncResult, out int survey_id, out bool survey_idSpecified, out string extra)
    {
        object[] results = this.EndInvoke(asyncResult);
        survey_id = ((int)(results[1]));
        survey_idSpecified = ((bool)(results[2]));
        extra = ((string)(results[3]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void add_surveyAsync(int project_id, string survey_name, int base_survey_id, bool base_survey_idSpecified)
    {
        this.add_surveyAsync(project_id, survey_name, base_survey_id, base_survey_idSpecified, null);
    }

    /// <remarks/>
    public void add_surveyAsync(int project_id, string survey_name, int base_survey_id, bool base_survey_idSpecified, object userState)
    {
        if ((this.add_surveyOperationCompleted == null))
        {
            this.add_surveyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_surveyOperationCompleted);
        }
        this.InvokeAsync("add_survey", new object[] {
                    project_id,
                    survey_name,
                    base_survey_id,
                    base_survey_idSpecified}, this.add_surveyOperationCompleted, userState);
    }

    private void Onadd_surveyOperationCompleted(object arg)
    {
        if ((this.add_surveyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.add_surveyCompleted(this, new add_surveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/check_interviewer_login_status", RequestNamespace = "http://localhost", ResponseElementName = "check_interviewer_login_status_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("check_interviewer_login_status_result")]
    public bool check_interviewer_login_status(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified)
    {
        object[] results = this.Invoke("check_interviewer_login_status", new object[] {
                    interviewer_id,
                    interviewer_idSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begincheck_interviewer_login_status(int interviewer_id, bool interviewer_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("check_interviewer_login_status", new object[] {
                    interviewer_id,
                    interviewer_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endcheck_interviewer_login_status(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void check_interviewer_login_statusAsync(int interviewer_id, bool interviewer_idSpecified)
    {
        this.check_interviewer_login_statusAsync(interviewer_id, interviewer_idSpecified, null);
    }

    /// <remarks/>
    public void check_interviewer_login_statusAsync(int interviewer_id, bool interviewer_idSpecified, object userState)
    {
        if ((this.check_interviewer_login_statusOperationCompleted == null))
        {
            this.check_interviewer_login_statusOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_interviewer_login_statusOperationCompleted);
        }
        this.InvokeAsync("check_interviewer_login_status", new object[] {
                    interviewer_id,
                    interviewer_idSpecified}, this.check_interviewer_login_statusOperationCompleted, userState);
    }

    private void Oncheck_interviewer_login_statusOperationCompleted(object arg)
    {
        if ((this.check_interviewer_login_statusCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.check_interviewer_login_statusCompleted(this, new check_interviewer_login_statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/check_paneluser_login", RequestNamespace = "http://localhost", ResponseElementName = "check_paneluser_login_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("check_paneluser_login_result")]
    public bool check_paneluser_login(string username, string password, int TID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TIDSpecified, int project_id)
    {
        object[] results = this.Invoke("check_paneluser_login", new object[] {
                    username,
                    password,
                    TID,
                    TIDSpecified,
                    project_id});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begincheck_paneluser_login(string username, string password, int TID, bool TIDSpecified, int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("check_paneluser_login", new object[] {
                    username,
                    password,
                    TID,
                    TIDSpecified,
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endcheck_paneluser_login(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void check_paneluser_loginAsync(string username, string password, int TID, bool TIDSpecified, int project_id)
    {
        this.check_paneluser_loginAsync(username, password, TID, TIDSpecified, project_id, null);
    }

    /// <remarks/>
    public void check_paneluser_loginAsync(string username, string password, int TID, bool TIDSpecified, int project_id, object userState)
    {
        if ((this.check_paneluser_loginOperationCompleted == null))
        {
            this.check_paneluser_loginOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_paneluser_loginOperationCompleted);
        }
        this.InvokeAsync("check_paneluser_login", new object[] {
                    username,
                    password,
                    TID,
                    TIDSpecified,
                    project_id}, this.check_paneluser_loginOperationCompleted, userState);
    }

    private void Oncheck_paneluser_loginOperationCompleted(object arg)
    {
        if ((this.check_paneluser_loginCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.check_paneluser_loginCompleted(this, new check_paneluser_loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/check_survey", RequestNamespace = "http://localhost", ResponseElementName = "check_survey_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("check_survey_result")]
    public bool check_survey(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, string survey_name)
    {
        object[] results = this.Invoke("check_survey", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    survey_name});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begincheck_survey(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string survey_name, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("check_survey", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    survey_name}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endcheck_survey(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void check_surveyAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string survey_name)
    {
        this.check_surveyAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, survey_name, null);
    }

    /// <remarks/>
    public void check_surveyAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string survey_name, object userState)
    {
        if ((this.check_surveyOperationCompleted == null))
        {
            this.check_surveyOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_surveyOperationCompleted);
        }
        this.InvokeAsync("check_survey", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    survey_name}, this.check_surveyOperationCompleted, userState);
    }

    private void Oncheck_surveyOperationCompleted(object arg)
    {
        if ((this.check_surveyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.check_surveyCompleted(this, new check_surveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/create_survey_email_invitation", RequestNamespace = "http://localhost", ResponseElementName = "create_survey_email_invitation_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("create_survey_email_invitation_result")]
    public bool create_survey_email_invitation(int project_id, int survey_id, string participant_ids, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime time, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeSpecified)
    {
        object[] results = this.Invoke("create_survey_email_invitation", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begincreate_survey_email_invitation(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("create_survey_email_invitation", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endcreate_survey_email_invitation(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void create_survey_email_invitationAsync(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified)
    {
        this.create_survey_email_invitationAsync(project_id, survey_id, participant_ids, time, timeSpecified, null);
    }

    /// <remarks/>
    public void create_survey_email_invitationAsync(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified, object userState)
    {
        if ((this.create_survey_email_invitationOperationCompleted == null))
        {
            this.create_survey_email_invitationOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncreate_survey_email_invitationOperationCompleted);
        }
        this.InvokeAsync("create_survey_email_invitation", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified}, this.create_survey_email_invitationOperationCompleted, userState);
    }

    private void Oncreate_survey_email_invitationOperationCompleted(object arg)
    {
        if ((this.create_survey_email_invitationCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.create_survey_email_invitationCompleted(this, new create_survey_email_invitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/create_survey_email_reminder", RequestNamespace = "http://localhost", ResponseElementName = "create_survey_email_reminder_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("create_survey_email_reminder_result")]
    public bool create_survey_email_reminder(int project_id, int survey_id, string participant_ids, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime time, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeSpecified)
    {
        object[] results = this.Invoke("create_survey_email_reminder", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begincreate_survey_email_reminder(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("create_survey_email_reminder", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endcreate_survey_email_reminder(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void create_survey_email_reminderAsync(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified)
    {
        this.create_survey_email_reminderAsync(project_id, survey_id, participant_ids, time, timeSpecified, null);
    }

    /// <remarks/>
    public void create_survey_email_reminderAsync(int project_id, int survey_id, string participant_ids, System.DateTime time, bool timeSpecified, object userState)
    {
        if ((this.create_survey_email_reminderOperationCompleted == null))
        {
            this.create_survey_email_reminderOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncreate_survey_email_reminderOperationCompleted);
        }
        this.InvokeAsync("create_survey_email_reminder", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    time,
                    timeSpecified}, this.create_survey_email_reminderOperationCompleted, userState);
    }

    private void Oncreate_survey_email_reminderOperationCompleted(object arg)
    {
        if ((this.create_survey_email_reminderCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.create_survey_email_reminderCompleted(this, new create_survey_email_reminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/delete_interviewer_from_tenant", RequestNamespace = "http://localhost", ResponseElementName = "delete_interviewer_from_tenant_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("message")]
    public string delete_interviewer_from_tenant(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, out string success, out string TID)
    {
        object[] results = this.Invoke("delete_interviewer_from_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified});
        success = ((string)(results[1]));
        TID = ((string)(results[2]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begindelete_interviewer_from_tenant(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("delete_interviewer_from_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Enddelete_interviewer_from_tenant(System.IAsyncResult asyncResult, out string success, out string TID)
    {
        object[] results = this.EndInvoke(asyncResult);
        success = ((string)(results[1]));
        TID = ((string)(results[2]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void delete_interviewer_from_tenantAsync(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified)
    {
        this.delete_interviewer_from_tenantAsync(interviewer_id, interviewer_idSpecified, project_id, project_idSpecified, null);
    }

    /// <remarks/>
    public void delete_interviewer_from_tenantAsync(int interviewer_id, bool interviewer_idSpecified, int project_id, bool project_idSpecified, object userState)
    {
        if ((this.delete_interviewer_from_tenantOperationCompleted == null))
        {
            this.delete_interviewer_from_tenantOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondelete_interviewer_from_tenantOperationCompleted);
        }
        this.InvokeAsync("delete_interviewer_from_tenant", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    project_id,
                    project_idSpecified}, this.delete_interviewer_from_tenantOperationCompleted, userState);
    }

    private void Ondelete_interviewer_from_tenantOperationCompleted(object arg)
    {
        if ((this.delete_interviewer_from_tenantCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.delete_interviewer_from_tenantCompleted(this, new delete_interviewer_from_tenantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/delete_participants", RequestNamespace = "http://localhost", ResponseElementName = "delete_participants_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("delete_participants_result")]
    public deleteParticipantResponseArray delete_participants(int project_id, string TIDs, [System.ComponentModel.DefaultValueAttribute(false)] bool delete_all_data, [System.ComponentModel.DefaultValueAttribute(true)] bool create_dump)
    {
        object[] results = this.Invoke("delete_participants", new object[] {
                    project_id,
                    TIDs,
                    delete_all_data,
                    create_dump});
        return ((deleteParticipantResponseArray)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Begindelete_participants(int project_id, string TIDs, bool delete_all_data, bool create_dump, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("delete_participants", new object[] {
                    project_id,
                    TIDs,
                    delete_all_data,
                    create_dump}, callback, asyncState);
    }

    /// <remarks/>
    public deleteParticipantResponseArray Enddelete_participants(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((deleteParticipantResponseArray)(results[0]));
    }

    /// <remarks/>
    public void delete_participantsAsync(int project_id, string TIDs, bool delete_all_data, bool create_dump)
    {
        this.delete_participantsAsync(project_id, TIDs, delete_all_data, create_dump, null);
    }

    /// <remarks/>
    public void delete_participantsAsync(int project_id, string TIDs, bool delete_all_data, bool create_dump, object userState)
    {
        if ((this.delete_participantsOperationCompleted == null))
        {
            this.delete_participantsOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondelete_participantsOperationCompleted);
        }
        this.InvokeAsync("delete_participants", new object[] {
                    project_id,
                    TIDs,
                    delete_all_data,
                    create_dump}, this.delete_participantsOperationCompleted, userState);
    }

    private void Ondelete_participantsOperationCompleted(object arg)
    {
        if ((this.delete_participantsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.delete_participantsCompleted(this, new delete_participantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/export_panel_orders", RequestNamespace = "http://localhost", ResponseElementName = "export_panel_orders_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("export_panel_orders_result")]
    public string export_panel_orders(string start, string end, bool account_data, int project_id)
    {
        object[] results = this.Invoke("export_panel_orders", new object[] {
                    start,
                    end,
                    account_data,
                    project_id});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginexport_panel_orders(string start, string end, bool account_data, int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("export_panel_orders", new object[] {
                    start,
                    end,
                    account_data,
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public string Endexport_panel_orders(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void export_panel_ordersAsync(string start, string end, bool account_data, int project_id)
    {
        this.export_panel_ordersAsync(start, end, account_data, project_id, null);
    }

    /// <remarks/>
    public void export_panel_ordersAsync(string start, string end, bool account_data, int project_id, object userState)
    {
        if ((this.export_panel_ordersOperationCompleted == null))
        {
            this.export_panel_ordersOperationCompleted = new System.Threading.SendOrPostCallback(this.Onexport_panel_ordersOperationCompleted);
        }
        this.InvokeAsync("export_panel_orders", new object[] {
                    start,
                    end,
                    account_data,
                    project_id}, this.export_panel_ordersOperationCompleted, userState);
    }

    private void Onexport_panel_ordersOperationCompleted(object arg)
    {
        if ((this.export_panel_ordersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.export_panel_ordersCompleted(this, new export_panel_ordersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_id", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_id_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_id_result")]
    public int get_interviewer_id(string username)
    {
        object[] results = this.Invoke("get_interviewer_id", new object[] {
                    username});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_id(string username, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_id", new object[] {
                    username}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_interviewer_id(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_idAsync(string username)
    {
        this.get_interviewer_idAsync(username, null);
    }

    /// <remarks/>
    public void get_interviewer_idAsync(string username, object userState)
    {
        if ((this.get_interviewer_idOperationCompleted == null))
        {
            this.get_interviewer_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_idOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_id", new object[] {
                    username}, this.get_interviewer_idOperationCompleted, userState);
    }

    private void Onget_interviewer_idOperationCompleted(object arg)
    {
        if ((this.get_interviewer_idCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_idCompleted(this, new get_interviewer_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_name", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_name_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_name_result")]
    public string get_interviewer_name(int interviewer_id)
    {
        object[] results = this.Invoke("get_interviewer_name", new object[] {
                    interviewer_id});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_name(int interviewer_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_name", new object[] {
                    interviewer_id}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_interviewer_name(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_nameAsync(int interviewer_id)
    {
        this.get_interviewer_nameAsync(interviewer_id, null);
    }

    /// <remarks/>
    public void get_interviewer_nameAsync(int interviewer_id, object userState)
    {
        if ((this.get_interviewer_nameOperationCompleted == null))
        {
            this.get_interviewer_nameOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_nameOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_name", new object[] {
                    interviewer_id}, this.get_interviewer_nameOperationCompleted, userState);
    }

    private void Onget_interviewer_nameOperationCompleted(object arg)
    {
        if ((this.get_interviewer_nameCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_nameCompleted(this, new get_interviewer_nameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_key_figures", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_key_figures_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_interviewer_key_figures_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_interviewer_key_figures(int project_id)
    {
        object[] results = this.Invoke("get_interviewer_key_figures", new object[] {
                    project_id});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_key_figures(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_key_figures", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_interviewer_key_figures(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_key_figuresAsync(int project_id)
    {
        this.get_interviewer_key_figuresAsync(project_id, null);
    }

    /// <remarks/>
    public void get_interviewer_key_figuresAsync(int project_id, object userState)
    {
        if ((this.get_interviewer_key_figuresOperationCompleted == null))
        {
            this.get_interviewer_key_figuresOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_key_figuresOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_key_figures", new object[] {
                    project_id}, this.get_interviewer_key_figuresOperationCompleted, userState);
    }

    private void Onget_interviewer_key_figuresOperationCompleted(object arg)
    {
        if ((this.get_interviewer_key_figuresCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_key_figuresCompleted(this, new get_interviewer_key_figuresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_login_status", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_login_status_response", Namespace = "http://localhost")]
    public get_interviewer_login_status_response get_interviewer_login_status([System.Xml.Serialization.XmlElementAttribute("get_interviewer_login_status", Namespace = "http://localhost")] get_interviewer_login_status get_interviewer_login_status1)
    {
        object[] results = this.Invoke("get_interviewer_login_status", new object[] {
                    get_interviewer_login_status1});
        return ((get_interviewer_login_status_response)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_login_status(get_interviewer_login_status get_interviewer_login_status1, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_login_status", new object[] {
                    get_interviewer_login_status1}, callback, asyncState);
    }

    /// <remarks/>
    public get_interviewer_login_status_response Endget_interviewer_login_status(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((get_interviewer_login_status_response)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_login_statusAsync(get_interviewer_login_status get_interviewer_login_status1)
    {
        this.get_interviewer_login_statusAsync(get_interviewer_login_status1, null);
    }

    /// <remarks/>
    public void get_interviewer_login_statusAsync(get_interviewer_login_status get_interviewer_login_status1, object userState)
    {
        if ((this.get_interviewer_login_statusOperationCompleted == null))
        {
            this.get_interviewer_login_statusOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_login_statusOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_login_status", new object[] {
                    get_interviewer_login_status1}, this.get_interviewer_login_statusOperationCompleted, userState);
    }

    private void Onget_interviewer_login_statusOperationCompleted(object arg)
    {
        if ((this.get_interviewer_login_statusCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_login_statusCompleted(this, new get_interviewer_login_statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_report", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_report_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_report_result")]
    public int get_interviewer_report(int project_id, string key_figure_name, int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool start_timeSpecified, int end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_report", new object[] {
                    project_id,
                    key_figure_name,
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    start_time,
                    start_timeSpecified,
                    end_time,
                    end_timeSpecified});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_report(int project_id, string key_figure_name, int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int start_time, bool start_timeSpecified, int end_time, bool end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_report", new object[] {
                    project_id,
                    key_figure_name,
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    start_time,
                    start_timeSpecified,
                    end_time,
                    end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_interviewer_report(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_reportAsync(int project_id, string key_figure_name, int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int start_time, bool start_timeSpecified, int end_time, bool end_timeSpecified)
    {
        this.get_interviewer_reportAsync(project_id, key_figure_name, interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, start_time, start_timeSpecified, end_time, end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_reportAsync(int project_id, string key_figure_name, int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int start_time, bool start_timeSpecified, int end_time, bool end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_reportOperationCompleted == null))
        {
            this.get_interviewer_reportOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_reportOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_report", new object[] {
                    project_id,
                    key_figure_name,
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    start_time,
                    start_timeSpecified,
                    end_time,
                    end_timeSpecified}, this.get_interviewer_reportOperationCompleted, userState);
    }

    private void Onget_interviewer_reportOperationCompleted(object arg)
    {
        if ((this.get_interviewer_reportCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_reportCompleted(this, new get_interviewer_reportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_survey_termination_category_call_time", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_survey_termination_category_call_time_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_interviewer_survey_termination_category_call_time_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_interviewer_survey_termination_category_call_time(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_survey_termination_category_call_time", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_survey_termination_category_call_time(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_survey_termination_category_call_time", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_interviewer_survey_termination_category_call_time(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_survey_termination_category_call_timeAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_interviewer_survey_termination_category_call_timeAsync(interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, project_id, project_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_survey_termination_category_call_timeAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_survey_termination_category_call_timeOperationCompleted == null))
        {
            this.get_interviewer_survey_termination_category_call_timeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_survey_termination_category_call_timeOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_survey_termination_category_call_time", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_interviewer_survey_termination_category_call_timeOperationCompleted, userState);
    }

    private void Onget_interviewer_survey_termination_category_call_timeOperationCompleted(object arg)
    {
        if ((this.get_interviewer_survey_termination_category_call_timeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_survey_termination_category_call_timeCompleted(this, new get_interviewer_survey_termination_category_call_timeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_survey_termination_category_count", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_survey_termination_category_count_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_interviewer_survey_termination_category_count_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_interviewer_survey_termination_category_count(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_survey_termination_category_count", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_survey_termination_category_count(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_survey_termination_category_count", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_interviewer_survey_termination_category_count(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_survey_termination_category_countAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_interviewer_survey_termination_category_countAsync(interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, project_id, project_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_survey_termination_category_countAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_survey_termination_category_countOperationCompleted == null))
        {
            this.get_interviewer_survey_termination_category_countOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_survey_termination_category_countOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_survey_termination_category_count", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_interviewer_survey_termination_category_countOperationCompleted, userState);
    }

    private void Onget_interviewer_survey_termination_category_countOperationCompleted(object arg)
    {
        if ((this.get_interviewer_survey_termination_category_countCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_survey_termination_category_countCompleted(this, new get_interviewer_survey_termination_category_countCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_workingtime", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_workingtime_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_workingtime_result")]
    public int get_interviewer_workingtime(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_workingtime", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_workingtime(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_workingtime", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_interviewer_workingtime(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_workingtimeAsync(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_interviewer_workingtimeAsync(interviewer_id, interviewer_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_workingtimeAsync(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_workingtimeOperationCompleted == null))
        {
            this.get_interviewer_workingtimeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_workingtimeOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_workingtime", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_interviewer_workingtimeOperationCompleted, userState);
    }

    private void Onget_interviewer_workingtimeOperationCompleted(object arg)
    {
        if ((this.get_interviewer_workingtimeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_workingtimeCompleted(this, new get_interviewer_workingtimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_workingtime_in_all_surveys", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_workingtime_in_all_surveys_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_interviewer_workingtime_in_all_surveys_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_interviewer_workingtime_in_all_surveys(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_workingtime_in_all_surveys", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_workingtime_in_all_surveys(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_workingtime_in_all_surveys", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_interviewer_workingtime_in_all_surveys(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_workingtime_in_all_surveysAsync(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_interviewer_workingtime_in_all_surveysAsync(interviewer_id, interviewer_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_workingtime_in_all_surveysAsync(int interviewer_id, bool interviewer_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_workingtime_in_all_surveysOperationCompleted == null))
        {
            this.get_interviewer_workingtime_in_all_surveysOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_workingtime_in_all_surveysOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_workingtime_in_all_surveys", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_interviewer_workingtime_in_all_surveysOperationCompleted, userState);
    }

    private void Onget_interviewer_workingtime_in_all_surveysOperationCompleted(object arg)
    {
        if ((this.get_interviewer_workingtime_in_all_surveysCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_workingtime_in_all_surveysCompleted(this, new get_interviewer_workingtime_in_all_surveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_interviewer_workingtime_in_survey", RequestNamespace = "http://localhost", ResponseElementName = "get_interviewer_workingtime_in_survey_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_interviewer_workingtime_in_survey_result")]
    public int get_interviewer_workingtime_in_survey(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_interviewer_workingtime_in_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_interviewer_workingtime_in_survey(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_interviewer_workingtime_in_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_interviewer_workingtime_in_survey(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_interviewer_workingtime_in_surveyAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_interviewer_workingtime_in_surveyAsync(interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, project_id, project_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_interviewer_workingtime_in_surveyAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_interviewer_workingtime_in_surveyOperationCompleted == null))
        {
            this.get_interviewer_workingtime_in_surveyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_interviewer_workingtime_in_surveyOperationCompleted);
        }
        this.InvokeAsync("get_interviewer_workingtime_in_survey", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_interviewer_workingtime_in_surveyOperationCompleted, userState);
    }

    private void Onget_interviewer_workingtime_in_surveyOperationCompleted(object arg)
    {
        if ((this.get_interviewer_workingtime_in_surveyCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_interviewer_workingtime_in_surveyCompleted(this, new get_interviewer_workingtime_in_surveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_mail_export", RequestNamespace = "http://localhost", ResponseElementName = "get_mail_export_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_mail_export_result")]
    public string get_mail_export(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified)
    {
        object[] results = this.Invoke("get_mail_export", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_mail_export(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_mail_export", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_mail_export(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_mail_exportAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified)
    {
        this.get_mail_exportAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, null);
    }

    /// <remarks/>
    public void get_mail_exportAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, object userState)
    {
        if ((this.get_mail_exportOperationCompleted == null))
        {
            this.get_mail_exportOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_mail_exportOperationCompleted);
        }
        this.InvokeAsync("get_mail_export", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified}, this.get_mail_exportOperationCompleted, userState);
    }

    private void Onget_mail_exportOperationCompleted(object arg)
    {
        if ((this.get_mail_exportCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_mail_exportCompleted(this, new get_mail_exportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participant_export", RequestNamespace = "http://localhost", ResponseElementName = "get_participant_export_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_participant_export_result")]
    public string get_participant_export(int project_id, string tids, int group_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool group_idSpecified, bool export_history, [System.Xml.Serialization.XmlIgnoreAttribute()] bool export_historySpecified)
    {
        object[] results = this.Invoke("get_participant_export", new object[] {
                    project_id,
                    tids,
                    group_id,
                    group_idSpecified,
                    export_history,
                    export_historySpecified});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participant_export(int project_id, string tids, int group_id, bool group_idSpecified, bool export_history, bool export_historySpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participant_export", new object[] {
                    project_id,
                    tids,
                    group_id,
                    group_idSpecified,
                    export_history,
                    export_historySpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_participant_export(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_participant_exportAsync(int project_id, string tids, int group_id, bool group_idSpecified, bool export_history, bool export_historySpecified)
    {
        this.get_participant_exportAsync(project_id, tids, group_id, group_idSpecified, export_history, export_historySpecified, null);
    }

    /// <remarks/>
    public void get_participant_exportAsync(int project_id, string tids, int group_id, bool group_idSpecified, bool export_history, bool export_historySpecified, object userState)
    {
        if ((this.get_participant_exportOperationCompleted == null))
        {
            this.get_participant_exportOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participant_exportOperationCompleted);
        }
        this.InvokeAsync("get_participant_export", new object[] {
                    project_id,
                    tids,
                    group_id,
                    group_idSpecified,
                    export_history,
                    export_historySpecified}, this.get_participant_exportOperationCompleted, userState);
    }

    private void Onget_participant_exportOperationCompleted(object arg)
    {
        if ((this.get_participant_exportCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participant_exportCompleted(this, new get_participant_exportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participant_export_info", RequestNamespace = "http://localhost", ResponseElementName = "get_participant_export_info_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_participant_export_info_result")]
    public string get_participant_export_info(int project_id, int group_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool group_idSpecified)
    {
        object[] results = this.Invoke("get_participant_export_info", new object[] {
                    project_id,
                    group_id,
                    group_idSpecified});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participant_export_info(int project_id, int group_id, bool group_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participant_export_info", new object[] {
                    project_id,
                    group_id,
                    group_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_participant_export_info(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_participant_export_infoAsync(int project_id, int group_id, bool group_idSpecified)
    {
        this.get_participant_export_infoAsync(project_id, group_id, group_idSpecified, null);
    }

    /// <remarks/>
    public void get_participant_export_infoAsync(int project_id, int group_id, bool group_idSpecified, object userState)
    {
        if ((this.get_participant_export_infoOperationCompleted == null))
        {
            this.get_participant_export_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participant_export_infoOperationCompleted);
        }
        this.InvokeAsync("get_participant_export_info", new object[] {
                    project_id,
                    group_id,
                    group_idSpecified}, this.get_participant_export_infoOperationCompleted, userState);
    }

    private void Onget_participant_export_infoOperationCompleted(object arg)
    {
        if ((this.get_participant_export_infoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participant_export_infoCompleted(this, new get_participant_export_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participant_from_token", RequestNamespace = "http://localhost", ResponseElementName = "get_participant_from_token_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_participant_from_token_result")]
    public int get_participant_from_token(string token)
    {
        object[] results = this.Invoke("get_participant_from_token", new object[] {
                    token});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participant_from_token(string token, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participant_from_token", new object[] {
                    token}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_participant_from_token(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_participant_from_tokenAsync(string token)
    {
        this.get_participant_from_tokenAsync(token, null);
    }

    /// <remarks/>
    public void get_participant_from_tokenAsync(string token, object userState)
    {
        if ((this.get_participant_from_tokenOperationCompleted == null))
        {
            this.get_participant_from_tokenOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participant_from_tokenOperationCompleted);
        }
        this.InvokeAsync("get_participant_from_token", new object[] {
                    token}, this.get_participant_from_tokenOperationCompleted, userState);
    }

    private void Onget_participant_from_tokenOperationCompleted(object arg)
    {
        if ((this.get_participant_from_tokenCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participant_from_tokenCompleted(this, new get_participant_from_tokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_projects", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_projects_response", Namespace = "http://localhost")]
    public get_projects_response get_projects([System.Xml.Serialization.XmlElementAttribute("get_projects", Namespace = "http://localhost")] get_projects get_projects1)
    {
        object[] results = this.Invoke("get_projects", new object[] {
                    get_projects1});
        return ((get_projects_response)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_projects(get_projects get_projects1, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_projects", new object[] {
                    get_projects1}, callback, asyncState);
    }

    /// <remarks/>
    public get_projects_response Endget_projects(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((get_projects_response)(results[0]));
    }

    /// <remarks/>
    public void get_projectsAsync(get_projects get_projects1)
    {
        this.get_projectsAsync(get_projects1, null);
    }

    /// <remarks/>
    public void get_projectsAsync(get_projects get_projects1, object userState)
    {
        if ((this.get_projectsOperationCompleted == null))
        {
            this.get_projectsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_projectsOperationCompleted);
        }
        this.InvokeAsync("get_projects", new object[] {
                    get_projects1}, this.get_projectsOperationCompleted, userState);
    }

    private void Onget_projectsOperationCompleted(object arg)
    {
        if ((this.get_projectsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_projectsCompleted(this, new get_projectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_project_actions", RequestNamespace = "http://localhost", ResponseElementName = "get_project_actions_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_project_actions_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_project_actions(int project_id)
    {
        object[] results = this.Invoke("get_project_actions", new object[] {
                    project_id});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_project_actions(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_project_actions", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_project_actions(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_project_actionsAsync(int project_id)
    {
        this.get_project_actionsAsync(project_id, null);
    }

    /// <remarks/>
    public void get_project_actionsAsync(int project_id, object userState)
    {
        if ((this.get_project_actionsOperationCompleted == null))
        {
            this.get_project_actionsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_project_actionsOperationCompleted);
        }
        this.InvokeAsync("get_project_actions", new object[] {
                    project_id}, this.get_project_actionsOperationCompleted, userState);
    }

    private void Onget_project_actionsOperationCompleted(object arg)
    {
        if ((this.get_project_actionsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_project_actionsCompleted(this, new get_project_actionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_project_groups", RequestNamespace = "http://localhost", ResponseElementName = "get_project_groups_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_project_groups_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_project_groups(int project_id)
    {
        object[] results = this.Invoke("get_project_groups", new object[] {
                    project_id});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_project_groups(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_project_groups", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_project_groups(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_project_groupsAsync(int project_id)
    {
        this.get_project_groupsAsync(project_id, null);
    }

    /// <remarks/>
    public void get_project_groupsAsync(int project_id, object userState)
    {
        if ((this.get_project_groupsOperationCompleted == null))
        {
            this.get_project_groupsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_project_groupsOperationCompleted);
        }
        this.InvokeAsync("get_project_groups", new object[] {
                    project_id}, this.get_project_groupsOperationCompleted, userState);
    }

    private void Onget_project_groupsOperationCompleted(object arg)
    {
        if ((this.get_project_groupsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_project_groupsCompleted(this, new get_project_groupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_project_surveys", RequestNamespace = "http://localhost", ResponseElementName = "get_project_surveys_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_project_surveys_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_project_surveys(int project_id)
    {
        object[] results = this.Invoke("get_project_surveys", new object[] {
                    project_id});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_project_surveys(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_project_surveys", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_project_surveys(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_project_surveysAsync(int project_id)
    {
        this.get_project_surveysAsync(project_id, null);
    }

    /// <remarks/>
    public void get_project_surveysAsync(int project_id, object userState)
    {
        if ((this.get_project_surveysOperationCompleted == null))
        {
            this.get_project_surveysOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_project_surveysOperationCompleted);
        }
        this.InvokeAsync("get_project_surveys", new object[] {
                    project_id}, this.get_project_surveysOperationCompleted, userState);
    }

    private void Onget_project_surveysOperationCompleted(object arg)
    {
        if ((this.get_project_surveysCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_project_surveysCompleted(this, new get_project_surveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_project_all_surveys", RequestNamespace = "http://localhost", ResponseElementName = "get_project_all_surveys_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_project_all_surveys_result")]
    public string get_project_all_surveys(int project_id)
    {
        object[] results = this.Invoke("get_project_all_surveys", new object[] {
                    project_id});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_project_all_surveys(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_project_all_surveys", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_project_all_surveys(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_project_all_surveysAsync(int project_id)
    {
        this.get_project_all_surveysAsync(project_id, null);
    }

    /// <remarks/>
    public void get_project_all_surveysAsync(int project_id, object userState)
    {
        if ((this.get_project_all_surveysOperationCompleted == null))
        {
            this.get_project_all_surveysOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_project_all_surveysOperationCompleted);
        }
        this.InvokeAsync("get_project_all_surveys", new object[] {
                    project_id}, this.get_project_all_surveysOperationCompleted, userState);
    }

    private void Onget_project_all_surveysOperationCompleted(object arg)
    {
        if ((this.get_project_all_surveysCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_project_all_surveysCompleted(this, new get_project_all_surveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_questionnaire_export", RequestNamespace = "http://localhost", ResponseElementName = "get_questionnaire_export_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_questionnaire_export_result")]
    public string get_questionnaire_export(int project_id, int questionnaire_id, string tans, string columns)
    {
        object[] results = this.Invoke("get_questionnaire_export", new object[] {
                    project_id,
                    questionnaire_id,
                    tans,
                    columns});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_questionnaire_export(int project_id, int questionnaire_id, string tans, string columns, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_questionnaire_export", new object[] {
                    project_id,
                    questionnaire_id,
                    tans,
                    columns}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_questionnaire_export(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_questionnaire_exportAsync(int project_id, int questionnaire_id, string tans, string columns)
    {
        this.get_questionnaire_exportAsync(project_id, questionnaire_id, tans, columns, null);
    }

    /// <remarks/>
    public void get_questionnaire_exportAsync(int project_id, int questionnaire_id, string tans, string columns, object userState)
    {
        if ((this.get_questionnaire_exportOperationCompleted == null))
        {
            this.get_questionnaire_exportOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_questionnaire_exportOperationCompleted);
        }
        this.InvokeAsync("get_questionnaire_export", new object[] {
                    project_id,
                    questionnaire_id,
                    tans,
                    columns}, this.get_questionnaire_exportOperationCompleted, userState);
    }

    private void Onget_questionnaire_exportOperationCompleted(object arg)
    {
        if ((this.get_questionnaire_exportCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_questionnaire_exportCompleted(this, new get_questionnaire_exportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_questionnaire_export_info", RequestNamespace = "http://localhost", ResponseElementName = "get_questionnaire_export_info_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_questionnaire_export_info_result")]
    public string get_questionnaire_export_info(int questionnaire_id, int project_id, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int group_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool group_idSpecified, int status_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool status_idSpecified, string last_change_time_start, string last_change_time_end)
    {
        object[] results = this.Invoke("get_questionnaire_export_info", new object[] {
                    questionnaire_id,
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    group_id,
                    group_idSpecified,
                    status_id,
                    status_idSpecified,
                    last_change_time_start,
                    last_change_time_end});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_questionnaire_export_info(int questionnaire_id, int project_id, int survey_id, bool survey_idSpecified, int group_id, bool group_idSpecified, int status_id, bool status_idSpecified, string last_change_time_start, string last_change_time_end, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_questionnaire_export_info", new object[] {
                    questionnaire_id,
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    group_id,
                    group_idSpecified,
                    status_id,
                    status_idSpecified,
                    last_change_time_start,
                    last_change_time_end}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_questionnaire_export_info(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_questionnaire_export_infoAsync(int questionnaire_id, int project_id, int survey_id, bool survey_idSpecified, int group_id, bool group_idSpecified, int status_id, bool status_idSpecified, string last_change_time_start, string last_change_time_end)
    {
        this.get_questionnaire_export_infoAsync(questionnaire_id, project_id, survey_id, survey_idSpecified, group_id, group_idSpecified, status_id, status_idSpecified, last_change_time_start, last_change_time_end, null);
    }

    /// <remarks/>
    public void get_questionnaire_export_infoAsync(int questionnaire_id, int project_id, int survey_id, bool survey_idSpecified, int group_id, bool group_idSpecified, int status_id, bool status_idSpecified, string last_change_time_start, string last_change_time_end, object userState)
    {
        if ((this.get_questionnaire_export_infoOperationCompleted == null))
        {
            this.get_questionnaire_export_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_questionnaire_export_infoOperationCompleted);
        }
        this.InvokeAsync("get_questionnaire_export_info", new object[] {
                    questionnaire_id,
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    group_id,
                    group_idSpecified,
                    status_id,
                    status_idSpecified,
                    last_change_time_start,
                    last_change_time_end}, this.get_questionnaire_export_infoOperationCompleted, userState);
    }

    private void Onget_questionnaire_export_infoOperationCompleted(object arg)
    {
        if ((this.get_questionnaire_export_infoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_questionnaire_export_infoCompleted(this, new get_questionnaire_export_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_questionnaire_export_serialized", RequestNamespace = "http://localhost", ResponseElementName = "get_questionnaire_export_serialized_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_questionnaire_export_serialized_result")]
    public string get_questionnaire_export_serialized(int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int questionnaire_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool questionnaire_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, System.DateTime time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeSpecified, [System.ComponentModel.DefaultValueAttribute(true)] bool create_zipfile, [System.ComponentModel.DefaultValueAttribute("xml")] string type)
    {
        object[] results = this.Invoke("get_questionnaire_export_serialized", new object[] {
                    project_id,
                    project_idSpecified,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    time,
                    timeSpecified,
                    create_zipfile,
                    type});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_questionnaire_export_serialized(int project_id, bool project_idSpecified, int questionnaire_id, bool questionnaire_idSpecified, int survey_id, bool survey_idSpecified, System.DateTime time, bool timeSpecified, bool create_zipfile, string type, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_questionnaire_export_serialized", new object[] {
                    project_id,
                    project_idSpecified,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    time,
                    timeSpecified,
                    create_zipfile,
                    type}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_questionnaire_export_serialized(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_questionnaire_export_serializedAsync(int project_id, bool project_idSpecified, int questionnaire_id, bool questionnaire_idSpecified, int survey_id, bool survey_idSpecified, System.DateTime time, bool timeSpecified, bool create_zipfile, string type)
    {
        this.get_questionnaire_export_serializedAsync(project_id, project_idSpecified, questionnaire_id, questionnaire_idSpecified, survey_id, survey_idSpecified, time, timeSpecified, create_zipfile, type, null);
    }

    /// <remarks/>
    public void get_questionnaire_export_serializedAsync(int project_id, bool project_idSpecified, int questionnaire_id, bool questionnaire_idSpecified, int survey_id, bool survey_idSpecified, System.DateTime time, bool timeSpecified, bool create_zipfile, string type, object userState)
    {
        if ((this.get_questionnaire_export_serializedOperationCompleted == null))
        {
            this.get_questionnaire_export_serializedOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_questionnaire_export_serializedOperationCompleted);
        }
        this.InvokeAsync("get_questionnaire_export_serialized", new object[] {
                    project_id,
                    project_idSpecified,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    time,
                    timeSpecified,
                    create_zipfile,
                    type}, this.get_questionnaire_export_serializedOperationCompleted, userState);
    }

    private void Onget_questionnaire_export_serializedOperationCompleted(object arg)
    {
        if ((this.get_questionnaire_export_serializedCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_questionnaire_export_serializedCompleted(this, new get_questionnaire_export_serializedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_questionnaire_names", RequestNamespace = "http://localhost", ResponseElementName = "get_questionnaire_names_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_questionnaire_names_result")]
    public string get_questionnaire_names(int project_id, int questionnaire_id)
    {
        object[] results = this.Invoke("get_questionnaire_names", new object[] {
                    project_id,
                    questionnaire_id});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_questionnaire_names(int project_id, int questionnaire_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_questionnaire_names", new object[] {
                    project_id,
                    questionnaire_id}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_questionnaire_names(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_questionnaire_namesAsync(int project_id, int questionnaire_id)
    {
        this.get_questionnaire_namesAsync(project_id, questionnaire_id, null);
    }

    /// <remarks/>
    public void get_questionnaire_namesAsync(int project_id, int questionnaire_id, object userState)
    {
        if ((this.get_questionnaire_namesOperationCompleted == null))
        {
            this.get_questionnaire_namesOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_questionnaire_namesOperationCompleted);
        }
        this.InvokeAsync("get_questionnaire_names", new object[] {
                    project_id,
                    questionnaire_id}, this.get_questionnaire_namesOperationCompleted, userState);
    }

    private void Onget_questionnaire_namesOperationCompleted(object arg)
    {
        if ((this.get_questionnaire_namesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_questionnaire_namesCompleted(this, new get_questionnaire_namesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participants_from_tans", RequestNamespace = "http://localhost", ResponseElementName = "get_participants_from_tans_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_participants_from_tans_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public tansItem[] get_participants_from_tans(string project_id, string tans)
    {
        object[] results = this.Invoke("get_participants_from_tans", new object[] {
                    project_id,
                    tans});
        return ((tansItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participants_from_tans(string project_id, string tans, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participants_from_tans", new object[] {
                    project_id,
                    tans}, callback, asyncState);
    }

    /// <remarks/>
    public tansItem[] Endget_participants_from_tans(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((tansItem[])(results[0]));
    }

    /// <remarks/>
    public void get_participants_from_tansAsync(string project_id, string tans)
    {
        this.get_participants_from_tansAsync(project_id, tans, null);
    }

    /// <remarks/>
    public void get_participants_from_tansAsync(string project_id, string tans, object userState)
    {
        if ((this.get_participants_from_tansOperationCompleted == null))
        {
            this.get_participants_from_tansOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participants_from_tansOperationCompleted);
        }
        this.InvokeAsync("get_participants_from_tans", new object[] {
                    project_id,
                    tans}, this.get_participants_from_tansOperationCompleted, userState);
    }

    private void Onget_participants_from_tansOperationCompleted(object arg)
    {
        if ((this.get_participants_from_tansCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participants_from_tansCompleted(this, new get_participants_from_tansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participant_surveys", RequestNamespace = "http://localhost", ResponseElementName = "get_participant_surveys_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_participant_surveys_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public surveyItem[] get_participant_surveys(string project_id, string TID)
    {
        object[] results = this.Invoke("get_participant_surveys", new object[] {
                    project_id,
                    TID});
        return ((surveyItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participant_surveys(string project_id, string TID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participant_surveys", new object[] {
                    project_id,
                    TID}, callback, asyncState);
    }

    /// <remarks/>
    public surveyItem[] Endget_participant_surveys(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((surveyItem[])(results[0]));
    }

    /// <remarks/>
    public void get_participant_surveysAsync(string project_id, string TID)
    {
        this.get_participant_surveysAsync(project_id, TID, null);
    }

    /// <remarks/>
    public void get_participant_surveysAsync(string project_id, string TID, object userState)
    {
        if ((this.get_participant_surveysOperationCompleted == null))
        {
            this.get_participant_surveysOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participant_surveysOperationCompleted);
        }
        this.InvokeAsync("get_participant_surveys", new object[] {
                    project_id,
                    TID}, this.get_participant_surveysOperationCompleted, userState);
    }

    private void Onget_participant_surveysOperationCompleted(object arg)
    {
        if ((this.get_participant_surveysCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participant_surveysCompleted(this, new get_participant_surveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_participant_table_suffixes", RequestNamespace = "http://localhost", ResponseElementName = "get_participant_table_suffixes_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_participant_table_suffixes_result")]
    public getParticipantTableSuffixesResponseArray get_participant_table_suffixes(int project_id)
    {
        object[] results = this.Invoke("get_participant_table_suffixes", new object[] {
                    project_id});
        return ((getParticipantTableSuffixesResponseArray)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_participant_table_suffixes(int project_id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_participant_table_suffixes", new object[] {
                    project_id}, callback, asyncState);
    }

    /// <remarks/>
    public getParticipantTableSuffixesResponseArray Endget_participant_table_suffixes(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((getParticipantTableSuffixesResponseArray)(results[0]));
    }

    /// <remarks/>
    public void get_participant_table_suffixesAsync(int project_id)
    {
        this.get_participant_table_suffixesAsync(project_id, null);
    }

    /// <remarks/>
    public void get_participant_table_suffixesAsync(int project_id, object userState)
    {
        if ((this.get_participant_table_suffixesOperationCompleted == null))
        {
            this.get_participant_table_suffixesOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_participant_table_suffixesOperationCompleted);
        }
        this.InvokeAsync("get_participant_table_suffixes", new object[] {
                    project_id}, this.get_participant_table_suffixesOperationCompleted, userState);
    }

    private void Onget_participant_table_suffixesOperationCompleted(object arg)
    {
        if ((this.get_participant_table_suffixesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_participant_table_suffixesCompleted(this, new get_participant_table_suffixesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_questionnaire_syntax_triple_s", RequestNamespace = "http://localhost", ResponseElementName = "get_questionnaire_syntax_triple_s_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_questionnaire_syntax_triple_s_result")]
    public string get_questionnaire_syntax_triple_s(int project_id, int questionnaire_id, bool keyingress_makros, [System.Xml.Serialization.XmlIgnoreAttribute()] bool keyingress_makrosSpecified)
    {
        object[] results = this.Invoke("get_questionnaire_syntax_triple_s", new object[] {
                    project_id,
                    questionnaire_id,
                    keyingress_makros,
                    keyingress_makrosSpecified});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_questionnaire_syntax_triple_s(int project_id, int questionnaire_id, bool keyingress_makros, bool keyingress_makrosSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_questionnaire_syntax_triple_s", new object[] {
                    project_id,
                    questionnaire_id,
                    keyingress_makros,
                    keyingress_makrosSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_questionnaire_syntax_triple_s(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_questionnaire_syntax_triple_sAsync(int project_id, int questionnaire_id, bool keyingress_makros, bool keyingress_makrosSpecified)
    {
        this.get_questionnaire_syntax_triple_sAsync(project_id, questionnaire_id, keyingress_makros, keyingress_makrosSpecified, null);
    }

    /// <remarks/>
    public void get_questionnaire_syntax_triple_sAsync(int project_id, int questionnaire_id, bool keyingress_makros, bool keyingress_makrosSpecified, object userState)
    {
        if ((this.get_questionnaire_syntax_triple_sOperationCompleted == null))
        {
            this.get_questionnaire_syntax_triple_sOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_questionnaire_syntax_triple_sOperationCompleted);
        }
        this.InvokeAsync("get_questionnaire_syntax_triple_s", new object[] {
                    project_id,
                    questionnaire_id,
                    keyingress_makros,
                    keyingress_makrosSpecified}, this.get_questionnaire_syntax_triple_sOperationCompleted, userState);
    }

    private void Onget_questionnaire_syntax_triple_sOperationCompleted(object arg)
    {
        if ((this.get_questionnaire_syntax_triple_sCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_questionnaire_syntax_triple_sCompleted(this, new get_questionnaire_syntax_triple_sCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_sound_files_of_current_question", RequestNamespace = "http://localhost", ResponseElementName = "get_sound_files_of_current_question_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_sound_files_of_current_question_result")]
    public string get_sound_files_of_current_question(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, string participant_datafield_name, string participant_datafield_value)
    {
        object[] results = this.Invoke("get_sound_files_of_current_question", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    participant_datafield_name,
                    participant_datafield_value});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_sound_files_of_current_question(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string participant_datafield_name, string participant_datafield_value, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_sound_files_of_current_question", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    participant_datafield_name,
                    participant_datafield_value}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_sound_files_of_current_question(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_sound_files_of_current_questionAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string participant_datafield_name, string participant_datafield_value)
    {
        this.get_sound_files_of_current_questionAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, participant_datafield_name, participant_datafield_value, null);
    }

    /// <remarks/>
    public void get_sound_files_of_current_questionAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string participant_datafield_name, string participant_datafield_value, object userState)
    {
        if ((this.get_sound_files_of_current_questionOperationCompleted == null))
        {
            this.get_sound_files_of_current_questionOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_sound_files_of_current_questionOperationCompleted);
        }
        this.InvokeAsync("get_sound_files_of_current_question", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    participant_datafield_name,
                    participant_datafield_value}, this.get_sound_files_of_current_questionOperationCompleted, userState);
    }

    private void Onget_sound_files_of_current_questionOperationCompleted(object arg)
    {
        if ((this.get_sound_files_of_current_questionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_sound_files_of_current_questionCompleted(this, new get_sound_files_of_current_questionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_survey_participant_info", RequestNamespace = "http://localhost", ResponseElementName = "get_survey_participant_info_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("success")]
    public bool get_survey_participant_info(int project_id, int survey_id, int questionnaire_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool questionnaire_idSpecified, string participant_ids, out string participants)
    {
        object[] results = this.Invoke("get_survey_participant_info", new object[] {
                    project_id,
                    survey_id,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    participant_ids});
        participants = ((string)(results[1]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_survey_participant_info(int project_id, int survey_id, int questionnaire_id, bool questionnaire_idSpecified, string participant_ids, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_survey_participant_info", new object[] {
                    project_id,
                    survey_id,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    participant_ids}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endget_survey_participant_info(System.IAsyncResult asyncResult, out string participants)
    {
        object[] results = this.EndInvoke(asyncResult);
        participants = ((string)(results[1]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void get_survey_participant_infoAsync(int project_id, int survey_id, int questionnaire_id, bool questionnaire_idSpecified, string participant_ids)
    {
        this.get_survey_participant_infoAsync(project_id, survey_id, questionnaire_id, questionnaire_idSpecified, participant_ids, null);
    }

    /// <remarks/>
    public void get_survey_participant_infoAsync(int project_id, int survey_id, int questionnaire_id, bool questionnaire_idSpecified, string participant_ids, object userState)
    {
        if ((this.get_survey_participant_infoOperationCompleted == null))
        {
            this.get_survey_participant_infoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_survey_participant_infoOperationCompleted);
        }
        this.InvokeAsync("get_survey_participant_info", new object[] {
                    project_id,
                    survey_id,
                    questionnaire_id,
                    questionnaire_idSpecified,
                    participant_ids}, this.get_survey_participant_infoOperationCompleted, userState);
    }

    private void Onget_survey_participant_infoOperationCompleted(object arg)
    {
        if ((this.get_survey_participant_infoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_survey_participant_infoCompleted(this, new get_survey_participant_infoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_survey_total_call_time", RequestNamespace = "http://localhost", ResponseElementName = "get_survey_total_call_time_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_survey_total_call_time_result")]
    public int get_survey_total_call_time(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, string span_start_time, string span_end_time)
    {
        object[] results = this.Invoke("get_survey_total_call_time", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    span_start_time,
                    span_end_time});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_survey_total_call_time(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string span_start_time, string span_end_time, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_survey_total_call_time", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    span_start_time,
                    span_end_time}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_survey_total_call_time(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_survey_total_call_timeAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string span_start_time, string span_end_time)
    {
        this.get_survey_total_call_timeAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, span_start_time, span_end_time, null);
    }

    /// <remarks/>
    public void get_survey_total_call_timeAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, string span_start_time, string span_end_time, object userState)
    {
        if ((this.get_survey_total_call_timeOperationCompleted == null))
        {
            this.get_survey_total_call_timeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_survey_total_call_timeOperationCompleted);
        }
        this.InvokeAsync("get_survey_total_call_time", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    span_start_time,
                    span_end_time}, this.get_survey_total_call_timeOperationCompleted, userState);
    }

    private void Onget_survey_total_call_timeOperationCompleted(object arg)
    {
        if ((this.get_survey_total_call_timeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_survey_total_call_timeCompleted(this, new get_survey_total_call_timeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_survey_workingtime", RequestNamespace = "http://localhost", ResponseElementName = "get_survey_workingtime_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_survey_workingtime_result")]
    public int get_survey_workingtime(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_survey_workingtime", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_survey_workingtime(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_survey_workingtime", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public int Endget_survey_workingtime(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void get_survey_workingtimeAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_survey_workingtimeAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_survey_workingtimeAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_survey_workingtimeOperationCompleted == null))
        {
            this.get_survey_workingtimeOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_survey_workingtimeOperationCompleted);
        }
        this.InvokeAsync("get_survey_workingtime", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_survey_workingtimeOperationCompleted, userState);
    }

    private void Onget_survey_workingtimeOperationCompleted(object arg)
    {
        if ((this.get_survey_workingtimeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_survey_workingtimeCompleted(this, new get_survey_workingtimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_survey_workingtime_of_interviewers", RequestNamespace = "http://localhost", ResponseElementName = "get_survey_workingtime_of_interviewers_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("get_survey_workingtime_of_interviewers_result")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_survey_workingtime_of_interviewers(int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int call_start_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_start_timeSpecified, int call_end_time, [System.Xml.Serialization.XmlIgnoreAttribute()] bool call_end_timeSpecified)
    {
        object[] results = this.Invoke("get_survey_workingtime_of_interviewers", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified});
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_survey_workingtime_of_interviewers(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_survey_workingtime_of_interviewers", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public mapItem[] Endget_survey_workingtime_of_interviewers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((mapItem[])(results[0]));
    }

    /// <remarks/>
    public void get_survey_workingtime_of_interviewersAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified)
    {
        this.get_survey_workingtime_of_interviewersAsync(survey_id, survey_idSpecified, project_id, project_idSpecified, call_start_time, call_start_timeSpecified, call_end_time, call_end_timeSpecified, null);
    }

    /// <remarks/>
    public void get_survey_workingtime_of_interviewersAsync(int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int call_start_time, bool call_start_timeSpecified, int call_end_time, bool call_end_timeSpecified, object userState)
    {
        if ((this.get_survey_workingtime_of_interviewersOperationCompleted == null))
        {
            this.get_survey_workingtime_of_interviewersOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_survey_workingtime_of_interviewersOperationCompleted);
        }
        this.InvokeAsync("get_survey_workingtime_of_interviewers", new object[] {
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    call_start_time,
                    call_start_timeSpecified,
                    call_end_time,
                    call_end_timeSpecified}, this.get_survey_workingtime_of_interviewersOperationCompleted, userState);
    }

    private void Onget_survey_workingtime_of_interviewersOperationCompleted(object arg)
    {
        if ((this.get_survey_workingtime_of_interviewersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_survey_workingtime_of_interviewersCompleted(this, new get_survey_workingtime_of_interviewersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_system_id", RequestNamespace = "http://localhost", ResponseElementName = "get_system_id_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_system_id_result")]
    public string get_system_id(int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, string name, string type)
    {
        object[] results = this.Invoke("get_system_id", new object[] {
                    project_id,
                    project_idSpecified,
                    name,
                    type});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_system_id(int project_id, bool project_idSpecified, string name, string type, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_system_id", new object[] {
                    project_id,
                    project_idSpecified,
                    name,
                    type}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_system_id(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_system_idAsync(int project_id, bool project_idSpecified, string name, string type)
    {
        this.get_system_idAsync(project_id, project_idSpecified, name, type, null);
    }

    /// <remarks/>
    public void get_system_idAsync(int project_id, bool project_idSpecified, string name, string type, object userState)
    {
        if ((this.get_system_idOperationCompleted == null))
        {
            this.get_system_idOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_system_idOperationCompleted);
        }
        this.InvokeAsync("get_system_id", new object[] {
                    project_id,
                    project_idSpecified,
                    name,
                    type}, this.get_system_idOperationCompleted, userState);
    }

    private void Onget_system_idOperationCompleted(object arg)
    {
        if ((this.get_system_idCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_system_idCompleted(this, new get_system_idCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/get_url_for_interview_session", RequestNamespace = "http://localhost", ResponseElementName = "get_url_for_interview_session_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("get_url_for_interview_session_result")]
    public string get_url_for_interview_session(int interviewer_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool interviewer_idSpecified, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, int offset_width, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offset_widthSpecified, int offset_height, [System.Xml.Serialization.XmlIgnoreAttribute()] bool offset_heightSpecified)
    {
        object[] results = this.Invoke("get_url_for_interview_session", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    offset_width,
                    offset_widthSpecified,
                    offset_height,
                    offset_heightSpecified});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginget_url_for_interview_session(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int offset_width, bool offset_widthSpecified, int offset_height, bool offset_heightSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("get_url_for_interview_session", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    offset_width,
                    offset_widthSpecified,
                    offset_height,
                    offset_heightSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public string Endget_url_for_interview_session(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void get_url_for_interview_sessionAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int offset_width, bool offset_widthSpecified, int offset_height, bool offset_heightSpecified)
    {
        this.get_url_for_interview_sessionAsync(interviewer_id, interviewer_idSpecified, survey_id, survey_idSpecified, project_id, project_idSpecified, offset_width, offset_widthSpecified, offset_height, offset_heightSpecified, null);
    }

    /// <remarks/>
    public void get_url_for_interview_sessionAsync(int interviewer_id, bool interviewer_idSpecified, int survey_id, bool survey_idSpecified, int project_id, bool project_idSpecified, int offset_width, bool offset_widthSpecified, int offset_height, bool offset_heightSpecified, object userState)
    {
        if ((this.get_url_for_interview_sessionOperationCompleted == null))
        {
            this.get_url_for_interview_sessionOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_url_for_interview_sessionOperationCompleted);
        }
        this.InvokeAsync("get_url_for_interview_session", new object[] {
                    interviewer_id,
                    interviewer_idSpecified,
                    survey_id,
                    survey_idSpecified,
                    project_id,
                    project_idSpecified,
                    offset_width,
                    offset_widthSpecified,
                    offset_height,
                    offset_heightSpecified}, this.get_url_for_interview_sessionOperationCompleted, userState);
    }

    private void Onget_url_for_interview_sessionOperationCompleted(object arg)
    {
        if ((this.get_url_for_interview_sessionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.get_url_for_interview_sessionCompleted(this, new get_url_for_interview_sessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/reset_survey_participant", RequestNamespace = "http://localhost", ResponseElementName = "reset_survey_participant_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("reset_survey_participant_result")]
    public bool reset_survey_participant(int project_id, int survey_id, string participant_ids, string type, int questionnaire_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool questionnaire_idSpecified)
    {
        object[] results = this.Invoke("reset_survey_participant", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    type,
                    questionnaire_id,
                    questionnaire_idSpecified});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginreset_survey_participant(int project_id, int survey_id, string participant_ids, string type, int questionnaire_id, bool questionnaire_idSpecified, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("reset_survey_participant", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    type,
                    questionnaire_id,
                    questionnaire_idSpecified}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endreset_survey_participant(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void reset_survey_participantAsync(int project_id, int survey_id, string participant_ids, string type, int questionnaire_id, bool questionnaire_idSpecified)
    {
        this.reset_survey_participantAsync(project_id, survey_id, participant_ids, type, questionnaire_id, questionnaire_idSpecified, null);
    }

    /// <remarks/>
    public void reset_survey_participantAsync(int project_id, int survey_id, string participant_ids, string type, int questionnaire_id, bool questionnaire_idSpecified, object userState)
    {
        if ((this.reset_survey_participantOperationCompleted == null))
        {
            this.reset_survey_participantOperationCompleted = new System.Threading.SendOrPostCallback(this.Onreset_survey_participantOperationCompleted);
        }
        this.InvokeAsync("reset_survey_participant", new object[] {
                    project_id,
                    survey_id,
                    participant_ids,
                    type,
                    questionnaire_id,
                    questionnaire_idSpecified}, this.reset_survey_participantOperationCompleted, userState);
    }

    private void Onreset_survey_participantOperationCompleted(object arg)
    {
        if ((this.reset_survey_participantCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reset_survey_participantCompleted(this, new reset_survey_participantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/set_interviewer_break", RequestNamespace = "http://localhost", ResponseElementName = "set_interviewer_break_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("set_interviewer_break_result")]
    public bool set_interviewer_break(int project_id, int survey_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool survey_idSpecified, int interviewer_id, string timestamp, string break_type, string break_status)
    {
        object[] results = this.Invoke("set_interviewer_break", new object[] {
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    interviewer_id,
                    timestamp,
                    break_type,
                    break_status});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginset_interviewer_break(int project_id, int survey_id, bool survey_idSpecified, int interviewer_id, string timestamp, string break_type, string break_status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("set_interviewer_break", new object[] {
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    interviewer_id,
                    timestamp,
                    break_type,
                    break_status}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endset_interviewer_break(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void set_interviewer_breakAsync(int project_id, int survey_id, bool survey_idSpecified, int interviewer_id, string timestamp, string break_type, string break_status)
    {
        this.set_interviewer_breakAsync(project_id, survey_id, survey_idSpecified, interviewer_id, timestamp, break_type, break_status, null);
    }

    /// <remarks/>
    public void set_interviewer_breakAsync(int project_id, int survey_id, bool survey_idSpecified, int interviewer_id, string timestamp, string break_type, string break_status, object userState)
    {
        if ((this.set_interviewer_breakOperationCompleted == null))
        {
            this.set_interviewer_breakOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_interviewer_breakOperationCompleted);
        }
        this.InvokeAsync("set_interviewer_break", new object[] {
                    project_id,
                    survey_id,
                    survey_idSpecified,
                    interviewer_id,
                    timestamp,
                    break_type,
                    break_status}, this.set_interviewer_breakOperationCompleted, userState);
    }

    private void Onset_interviewer_breakOperationCompleted(object arg)
    {
        if ((this.set_interviewer_breakCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.set_interviewer_breakCompleted(this, new set_interviewer_breakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/set_mail_send_status", RequestNamespace = "http://localhost", ResponseElementName = "set_mail_send_status_response", ResponseNamespace = "http://localhost", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("set_mail_send_status_result")]
    public bool set_mail_send_status(int project_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool project_idSpecified, string mail_send_status)
    {
        object[] results = this.Invoke("set_mail_send_status", new object[] {
                    project_id,
                    project_idSpecified,
                    mail_send_status});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginset_mail_send_status(int project_id, bool project_idSpecified, string mail_send_status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("set_mail_send_status", new object[] {
                    project_id,
                    project_idSpecified,
                    mail_send_status}, callback, asyncState);
    }

    /// <remarks/>
    public bool Endset_mail_send_status(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void set_mail_send_statusAsync(int project_id, bool project_idSpecified, string mail_send_status)
    {
        this.set_mail_send_statusAsync(project_id, project_idSpecified, mail_send_status, null);
    }

    /// <remarks/>
    public void set_mail_send_statusAsync(int project_id, bool project_idSpecified, string mail_send_status, object userState)
    {
        if ((this.set_mail_send_statusOperationCompleted == null))
        {
            this.set_mail_send_statusOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_mail_send_statusOperationCompleted);
        }
        this.InvokeAsync("set_mail_send_status", new object[] {
                    project_id,
                    project_idSpecified,
                    mail_send_status}, this.set_mail_send_statusOperationCompleted, userState);
    }

    private void Onset_mail_send_statusOperationCompleted(object arg)
    {
        if ((this.set_mail_send_statusCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.set_mail_send_statusCompleted(this, new set_mail_send_statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://localhost")]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "http://localhost", IsNullable = false)]
public partial class AuthenticationHeader : System.Web.Services.Protocols.SoapHeader
{

    private string usernameField;

    private string passwordField;

    /// <remarks/>
    public string username
    {
        get
        {
            return this.usernameField;
        }
        set
        {
            this.usernameField = value;
        }
    }

    /// <remarks/>
    public string password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://localhost")]
public partial class getParticipantTableSuffixesResponseArray
{

    private string[] table_suffixesField;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("table_suffix")]
    public string[] table_suffixes
    {
        get
        {
            return this.table_suffixesField;
        }
        set
        {
            this.table_suffixesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://localhost")]
public partial class tansItem
{

    private object tanField;

    private object tIDField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object tan
    {
        get
        {
            return this.tanField;
        }
        set
        {
            this.tanField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object TID
    {
        get
        {
            return this.tIDField;
        }
        set
        {
            this.tIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://localhost")]
public partial class surveyItem
{

    private object survey_idField;

    private object tanField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object survey_id
    {
        get
        {
            return this.survey_idField;
        }
        set
        {
            this.survey_idField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object tan
    {
        get
        {
            return this.tanField;
        }
        set
        {
            this.tanField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://localhost")]
public partial class mapItem
{

    private object keyField;

    private object valueField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object key
    {
        get
        {
            return this.keyField;
        }
        set
        {
            this.keyField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public object value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://localhost")]
public partial class deleteParticipantResponseArray
{

    private string messageField;

    private bool successField;

    private System.Nullable<int>[] tIDsField;

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
    public string message
    {
        get
        {
            return this.messageField;
        }
        set
        {
            this.messageField = value;
        }
    }

    /// <remarks/>
    public bool success
    {
        get
        {
            return this.successField;
        }
        set
        {
            this.successField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("TID")]
    public System.Nullable<int>[] TIDs
    {
        get
        {
            return this.tIDsField;
        }
        set
        {
            this.tIDsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://localhost")]
public partial class get_interviewer_login_status
{
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://localhost")]
public partial class get_interviewer_login_status_response
{

    private mapItem[] get_interviewer_login_status_resultField;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_interviewer_login_status_result
    {
        get
        {
            return this.get_interviewer_login_status_resultField;
        }
        set
        {
            this.get_interviewer_login_status_resultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://localhost")]
public partial class get_projects
{
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://localhost")]
public partial class get_projects_response
{

    private mapItem[] get_projects_resultField;

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable = false)]
    public mapItem[] get_projects_result
    {
        get
        {
            return this.get_projects_resultField;
        }
        set
        {
            this.get_projects_resultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void AuthenticationHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_group_to_surveyCompletedEventHandler(object sender, add_group_to_surveyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_group_to_surveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_group_to_surveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public string extra
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_interviewer_to_surveyCompletedEventHandler(object sender, add_interviewer_to_surveyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_interviewer_to_surveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_interviewer_to_surveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_interviewer_to_tenantCompletedEventHandler(object sender, add_interviewer_to_tenantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_interviewer_to_tenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_interviewer_to_tenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_participantCompletedEventHandler(object sender, add_participantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_participantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_participantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public int import_count
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }

    /// <remarks/>
    public bool import_countSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[2]));
        }
    }

    /// <remarks/>
    public string participant_ids
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public string extra
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[4]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_participant_to_actionCompletedEventHandler(object sender, add_participant_to_actionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_participant_to_actionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_participant_to_actionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_participant_to_groupCompletedEventHandler(object sender, add_participant_to_groupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_participant_to_groupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_participant_to_groupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public int import_count
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }

    /// <remarks/>
    public bool import_countSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[2]));
        }
    }

    /// <remarks/>
    public string participant_ids
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }

    /// <remarks/>
    public bool added_to_group
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[4]));
        }
    }

    /// <remarks/>
    public bool added_to_groupSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[5]));
        }
    }

    /// <remarks/>
    public bool group_created
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[6]));
        }
    }

    /// <remarks/>
    public bool group_createdSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[7]));
        }
    }

    /// <remarks/>
    public int group_id
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[8]));
        }
    }

    /// <remarks/>
    public bool group_idSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[9]));
        }
    }

    /// <remarks/>
    public string extra
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[10]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void add_surveyCompletedEventHandler(object sender, add_surveyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class add_surveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal add_surveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public int survey_id
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }

    /// <remarks/>
    public bool survey_idSpecified
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[2]));
        }
    }

    /// <remarks/>
    public string extra
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void check_interviewer_login_statusCompletedEventHandler(object sender, check_interviewer_login_statusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class check_interviewer_login_statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal check_interviewer_login_statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void check_paneluser_loginCompletedEventHandler(object sender, check_paneluser_loginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class check_paneluser_loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal check_paneluser_loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void check_surveyCompletedEventHandler(object sender, check_surveyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class check_surveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal check_surveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void create_survey_email_invitationCompletedEventHandler(object sender, create_survey_email_invitationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class create_survey_email_invitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal create_survey_email_invitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void create_survey_email_reminderCompletedEventHandler(object sender, create_survey_email_reminderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class create_survey_email_reminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal create_survey_email_reminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void delete_interviewer_from_tenantCompletedEventHandler(object sender, delete_interviewer_from_tenantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class delete_interviewer_from_tenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal delete_interviewer_from_tenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }

    /// <remarks/>
    public string success
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }

    /// <remarks/>
    public string TID
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void delete_participantsCompletedEventHandler(object sender, delete_participantsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class delete_participantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal delete_participantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public deleteParticipantResponseArray Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((deleteParticipantResponseArray)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void export_panel_ordersCompletedEventHandler(object sender, export_panel_ordersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class export_panel_ordersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal export_panel_ordersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_idCompletedEventHandler(object sender, get_interviewer_idCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_nameCompletedEventHandler(object sender, get_interviewer_nameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_nameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_nameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_key_figuresCompletedEventHandler(object sender, get_interviewer_key_figuresCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_key_figuresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_key_figuresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_login_statusCompletedEventHandler(object sender, get_interviewer_login_statusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_login_statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_login_statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public get_interviewer_login_status_response Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((get_interviewer_login_status_response)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_reportCompletedEventHandler(object sender, get_interviewer_reportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_reportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_reportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_survey_termination_category_call_timeCompletedEventHandler(object sender, get_interviewer_survey_termination_category_call_timeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_survey_termination_category_call_timeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_survey_termination_category_call_timeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_survey_termination_category_countCompletedEventHandler(object sender, get_interviewer_survey_termination_category_countCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_survey_termination_category_countCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_survey_termination_category_countCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_workingtimeCompletedEventHandler(object sender, get_interviewer_workingtimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_workingtimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_workingtimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_workingtime_in_all_surveysCompletedEventHandler(object sender, get_interviewer_workingtime_in_all_surveysCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_workingtime_in_all_surveysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_workingtime_in_all_surveysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_interviewer_workingtime_in_surveyCompletedEventHandler(object sender, get_interviewer_workingtime_in_surveyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_interviewer_workingtime_in_surveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_interviewer_workingtime_in_surveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_mail_exportCompletedEventHandler(object sender, get_mail_exportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_mail_exportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_mail_exportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participant_exportCompletedEventHandler(object sender, get_participant_exportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participant_exportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participant_exportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participant_export_infoCompletedEventHandler(object sender, get_participant_export_infoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participant_export_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participant_export_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participant_from_tokenCompletedEventHandler(object sender, get_participant_from_tokenCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participant_from_tokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participant_from_tokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_projectsCompletedEventHandler(object sender, get_projectsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_projectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_projectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public get_projects_response Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((get_projects_response)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_project_actionsCompletedEventHandler(object sender, get_project_actionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_project_actionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_project_actionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_project_groupsCompletedEventHandler(object sender, get_project_groupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_project_groupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_project_groupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_project_surveysCompletedEventHandler(object sender, get_project_surveysCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_project_surveysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_project_surveysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_project_all_surveysCompletedEventHandler(object sender, get_project_all_surveysCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_project_all_surveysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_project_all_surveysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_questionnaire_exportCompletedEventHandler(object sender, get_questionnaire_exportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_questionnaire_exportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_questionnaire_exportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_questionnaire_export_infoCompletedEventHandler(object sender, get_questionnaire_export_infoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_questionnaire_export_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_questionnaire_export_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_questionnaire_export_serializedCompletedEventHandler(object sender, get_questionnaire_export_serializedCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_questionnaire_export_serializedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_questionnaire_export_serializedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_questionnaire_namesCompletedEventHandler(object sender, get_questionnaire_namesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_questionnaire_namesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_questionnaire_namesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participants_from_tansCompletedEventHandler(object sender, get_participants_from_tansCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participants_from_tansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participants_from_tansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public tansItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((tansItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participant_surveysCompletedEventHandler(object sender, get_participant_surveysCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participant_surveysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participant_surveysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public surveyItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((surveyItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_participant_table_suffixesCompletedEventHandler(object sender, get_participant_table_suffixesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_participant_table_suffixesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_participant_table_suffixesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public getParticipantTableSuffixesResponseArray Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((getParticipantTableSuffixesResponseArray)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_questionnaire_syntax_triple_sCompletedEventHandler(object sender, get_questionnaire_syntax_triple_sCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_questionnaire_syntax_triple_sCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_questionnaire_syntax_triple_sCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_sound_files_of_current_questionCompletedEventHandler(object sender, get_sound_files_of_current_questionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_sound_files_of_current_questionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_sound_files_of_current_questionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_survey_participant_infoCompletedEventHandler(object sender, get_survey_participant_infoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_survey_participant_infoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_survey_participant_infoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }

    /// <remarks/>
    public string participants
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_survey_total_call_timeCompletedEventHandler(object sender, get_survey_total_call_timeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_survey_total_call_timeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_survey_total_call_timeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_survey_workingtimeCompletedEventHandler(object sender, get_survey_workingtimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_survey_workingtimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_survey_workingtimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_survey_workingtime_of_interviewersCompletedEventHandler(object sender, get_survey_workingtime_of_interviewersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_survey_workingtime_of_interviewersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_survey_workingtime_of_interviewersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public mapItem[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((mapItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_system_idCompletedEventHandler(object sender, get_system_idCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_system_idCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_system_idCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void get_url_for_interview_sessionCompletedEventHandler(object sender, get_url_for_interview_sessionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class get_url_for_interview_sessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal get_url_for_interview_sessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void reset_survey_participantCompletedEventHandler(object sender, reset_survey_participantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class reset_survey_participantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal reset_survey_participantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void set_interviewer_breakCompletedEventHandler(object sender, set_interviewer_breakCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class set_interviewer_breakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal set_interviewer_breakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
public delegate void set_mail_send_statusCompletedEventHandler(object sender, set_mail_send_statusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2046.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class set_mail_send_statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal set_mail_send_statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}
